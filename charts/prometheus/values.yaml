# Default values for helm-chart-prometheus.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: prom/prometheus
  tag: v2.17.1
  pullPolicy: IfNotPresent

initContainer:
  - name: "init-chown-data"
    image: debian:9
    imagePullPolicy: IfNotPresent
    command: ["chown", "-R", "65534:65534", "/data"]
    volumeMounts:
    - name: oc-prometheus-data
      mountPath: /data
      subPath: ""

args:
  configFile: '--config.file=/etc/prometheus/prometheus.yml'
  webListenAddress: '--web.listen-address=0.0.0.0:9090'
  storageTsdbPath: '--storage.tsdb.path=/data'
  webEnableLifecycle: '--web.enable-lifecycle'
  storageTsdbRetentionTime: '--storage.tsdb.retention.time=2h'
  storageTsdbRetentionSize: '--storage.tsdb.retention.size=5GB'
  storageTsdbMinBlockDuration: '--storage.tsdb.min-block-duration=2h'
  storageTsdbMaxBlockDuration: '--storage.tsdb.max-block-duration=2h'

ports:
  containerPort: 9090

readinessProbe:
  httpGet:
    path: /-/ready
    port: 9090
  initialDelaySeconds: 30
  timeoutSeconds: 30

livenessProbe:
  httpGet:
    path: /-/healthy
    port: 9090
  initialDelaySeconds: 30
  timeoutSeconds: 30

resources:
  requests:
    cpu: 200m
    memory: 1000Mi

volumeMounts:
  - name: config-volume
    mountPath: /etc/prometheus

hostNetwork: true
hostPID: true

terminationGracePeriodSeconds: 300

volumes:
  - name: config-volume
    configMap:
      name: prometheus-configmap

restartPolicy: Always

rules:
  apiGroups:
    extensions: extensions
    resources:
      nodes: nodes
      nodeOrProxy: nodes/proxy
      services: services
      endpoints: endpoints
      pods: pods
      ingresses: ingresses
    # verbs: ["get", "list", "watch"]

enableIstio: false
nonIstioConfigMap:
  data:
    prometheus.yml: |-
      global:
        scrape_interval: 30s
      scrape_configs:
        - job_name: 'oc-kubernetes-pods'
          scheme: http
          kubernetes_sd_configs:
          - role: pod
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_opscruisePerimeter]
            regex: opscruise
            action: keep
      remote_write:
        - url: "http://promgw-service.opscruise.svc.K8S_CLUSTER_FQDN:8585/ingest"
          queue_config:
            max_samples_per_send: 1000
            capacity: 10000
            max_shards: 1

istioConfigMap:
  name: prometheus-configmap
  data:
    prometheus.yml: |-
      global:
        scrape_interval: 30s
  
      scrape_configs:
        - job_name: 'kubernetes-pods'
          kubernetes_sd_configs:
          - role: pod
          relabel_configs:  # If first two labels are present, pod should be scraped  by the istio-secure job.
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: pod_name
  
        - job_name: 'oc-kubernetes-pods'
          scheme: http
          kubernetes_sd_configs:
          - role: pod
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_opscruisePerimeter]
            regex: opscruise
            action: keep
      remote_write:
        - url: "http://promgw-service.opscruise.svc.K8S_CLUSTER_FQDN:8585/ingest"
          queue_config:
            max_samples_per_send: 1000
            capacity: 10000
            max_shards: 1
          write_relabel_configs:
          - source_labels: [__name__]
            regex: '(envoy.*|istio_agent.*)'
            action: drop
      rule_files:
      - /etc/prometheus/recording_rules.yml

    recording_rules.yml: |
      groups:
        - name: istio.opscruise.rules
          rules:
          - record: istio_l7_url_req_cnt
            expr: |
              sum without (response_code) (idelta(istio_requests_total{job="kubernetes-pods",reporter="source",url=~"/.*"}[60s]))
          - record: istio_l7_url_rsptime_avg_ms
            expr: |
              sum without (response_code) (rate(istio_request_duration_milliseconds_sum{job="kubernetes-pods",reporter="source",url=~"/.*"}[60s]))/sum without (response_code) (rate(istio_request_duration_milliseconds_count{job="kubernetes-pods",reporter="source",url=~"/.*"}[60s]))
          - record: istio_l7_url_rsperr_cnt
            expr: |
              sum without (response_code) (idelta(istio_requests_total{job="kubernetes-pods",reporter="source",url=~"/.*",response_code=~"[45][0-9]{2}"}[60s]))
          - record: istio_l7_req_cnt
            expr: |
              sum without (url, response_code) (idelta(istio_requests_total{job="kubernetes-pods",reporter="source",url=~"/.*"}[60s]))
            labels:
              url: "None"
          - record: istio_l7_rsptime_avg_ms
            expr: |
              sum without (url, response_code)  (rate(istio_request_duration_milliseconds_sum{job="kubernetes-pods",reporter="source",url=~"/.*"}[60s]))/sum without (url, response_code) (rate(istio_request_duration_milliseconds_count{job="kubernetes-pods",reporter="source",url=~"/.*"}[60s]))
            labels:
              url: "None"
          - record: istio_l7_rsperr_cnt
            expr: |
              sum without (url, response_code) (idelta(istio_requests_total{job="kubernetes-pods",reporter="source",url=~"/.*",response_code=~"[45][0-9]{2}"}[60s]))
            labels:
              url: "None"

labels: {}

annotations: {}

tolerations:

priorityClassName: ""

# Persistent volume
enablePersistent: false
pvCreate: false
storageclassCreate: false
pv:
  name: oc-pv-prometheus
  persistentVolumeReclaimPolicy: Retain
  accessModes: ReadWriteOnce
  hostPath:
    path: "/var/log/prometheus/data"
  capacity:
    storage: 10Gi

pvc:
  name: oc-pvc-prometheus
  accessModes: ReadWriteOnce
  resources:
    requests:
      storage: 10Gi

storageClass:
  name: oc-storage-prometheus
  provisioner: kubernetes.io/no-provisioner
  reclaimPolicy: Retain
  allowVolumeExpansion: true
  volumeBindingMode: WaitForFirstConsumer   ## Other option Immediate
  parameters: {}

persistentVolumeMount:
  - name: oc-prometheus-data
    mountPath: /data
    subPath: ""

persistentVolume:
  - name: oc-prometheus-data
    persistentVolumeClaim:
      claimName: oc-pvc-prometheus
