kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Values.config.meta.name }}"
  namespace: {{ .Release.Namespace }}
data:
  {{- $K8S_CLUSTER_FQDN := "cluster.local" -}}
  {{ if .Values.global.k8sClusterFqdn }}
    {{- $K8S_CLUSTER_FQDN = .Values.global.k8sClusterFqdn -}}
  {{- end }}
  OAUTH_WITH_SSL: "{{ .Values.config.oauthWithSsl }}"
  OAUTH_LOGIN_ENDPOINT: "{{ .Values.config.oauthLoginEndpoint }}"
  OAUTH_LOGIN_GRANT_TYPE: "{{ .Values.config.oauthLoginGrantType }}"
  OAUTH_LOGIN_SCOPE: "{{ .Values.config.oauthLoginScope }}"
  OAUTH_INTROSPECT_ENDPOINT: "{{ .Values.config.oauthIntrospectEndpoint }}"
  GOOGLE_APPLICATION_CREDENTIALS: "{{ .Values.config.googleApplicationCredentials }}"
  OAUTH_ACCEPT_UNSECURE_SERVER: "{{ .Values.config.oauthAcceptUnsecureServer }}"
  kafka.bootstrap.servers: "{{ .Values.global.gatewayCreds.environment.OPSCRUISE_ENDPOINT }}"
  tracegw.jaeger.endpoint: "{{ .Values.config.tracegw.jaegerEndpoint | replace "K8S_CLUSTER_FQDN" $K8S_CLUSTER_FQDN }}"
  tracegw.spans.max_per_batch: "{{ .Values.config.tracegw.spansMaxPerBatch }}"
  tracegw.service.refresh.interval: "{{ .Values.config.tracegw.serviceRefreshInterval }}"
  tracegw.traces.polling.interval: "{{ .Values.config.tracegw.tracesPollingInterval }}"
  tracegw.lookback.duration_secs: "{{ .Values.config.tracegw.lookbackDurationSecs }}"
  tracegw.meters.collapseConsecutiveRepeatingSpans: "{{ .Values.config.tracegw.metersCollapseConsecutiveRepeatingSpans }}"
  tracegw.meters.maxNumberOfRepeatedSpans: "{{ .Values.config.tracegw.metersMaxNumberOfRepeatedSpans }}"
  tracegw.enableTraceForwarding: "{{ .Values.config.tracegw.enableTraceForwarding }}"
  tracegw.max.traces: "{{ .Values.config.tracegw.maxTraces }}"
  tracegw.filter.tags.key: "{{ .Values.config.tracegw.filterTagsKey }}"
  tracegw.filter.tags.value: "{{ .Values.config.tracegw.filterTagsValue }}"
  tracegw.tempo.jaeger.grpc.ssl: "{{ .Values.config.tracegw.tempoJaegerGrpcSsl }}"
  tracegw.tempo.jaeger.trace-dup.cache.duration.in-sec: "{{ .Values.config.tracegw.tempoTraceDupCacheDurationSec }}"
  tracegw.tempo.jaeger.trace-dup.cache.record.limit: "{{ .Values.config.tracegw.tempoTraceDupCacheRecordLimit }}"
  tracegw.trace.data.from.jaeger: "{{ .Values.config.tracegw.traceDataFromJeager }}"
  tracegw.tempo.http: "{{ .Values.config.tracegw.tempoHttp }}"
  tracegw.meters.exclude-all-tags: "{{ .Values.config.tracegw.metersExcludeAllTags }}"
  tracegw.tempo.http.api.concurrent.pool: "{{ .Values.config.tracegw.tempoHttpApiConcurrentPool }}"
  tracegw.trace.headers: "{{ .Values.config.tracegw.traceHeaders }}"
  tracegw.toperation.url.pattern: "{{ .Values.config.tracegw.toperationURLPattern }}"
  tracegw.mode: "{{ .Values.config.tracegw.mode }}"
  kafka.sasl: "{{ .Values.config.kafka.sasl }}"
  quarkus.http.port: "{{ .Values.config.quarkus.httpPort }}"
  quarkus.log.level: "{{ .Values.logLevel }}"
  gatewayName: "{{ .Values.config.gatewayName }}"
  gatewayKind: "{{ .Values.config.gatewayKind }}"
  kafka.sasl.jaas.config: "{{ .Values.config.kafka.saslJaasConfig }}"
  kafka.security.protocol: "{{ .Values.config.kafka.securityProtocol }}"
  kafka.sasl.mechanism: "{{ .Values.config.kafka.saslMechanism }}"
  kafka.sasl.login.callback.handler.class: "{{ .Values.config.kafka.saslLoginCallbackHandlerClass }}"
  kafka.ssl.verify: "{{ .Values.config.kafka.sslVerify }}"
