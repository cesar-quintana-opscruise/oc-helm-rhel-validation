# Default values for opscruise-node-exporter.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
name: prometheus-node-exporter
# namespace: opscruise

image:
  repository: opscruiseindia/oc-node-exporter
  node_exporter_tag: <VERSION>
  imagePullPolicy: IfNotPresent

args:
  procFS: --path.procfs=/host/proc
  sysFS: --path.sysfs=/host/sys
  webMaxRequests: --web.max-requests=1
  reversePathPacket: --collector.conntrackext.forward-and-reverse-path-packets
  enableAllMetrics: --collector.ocflowbpfcollector.enable-all-metrics
  interface: --collector.ocflowbpfcollector.interface

interface: ^ens|^cali|^eth|^veth|^eni

ports:
  # containerPort: 9100
  # hostPort: 9100
  name: metrics

resources:
  limits:
    memory: 600Mi
  requests:
    cpu: 200m
    memory: 300Mi

securityContext:
  addNETADMIN: NET_ADMIN
  addSYSADMIN: SYS_ADMIN
  privileged: true

neLabels:
  k8sapp: opscruise-node-exporter
  version: v0.15.2
  opscruisePerimeter: opscruise
  opscruiseGroup: exporters
  opscruiseProduct: NodeExporter
  opscruiseStream: opscruise
  kubernetesIoClusterService: true
  addonmanagerKubernetesIoMode: Reconcile

volumeMounts:
 devmountPath: /host/dev
 procmountPath: /host/proc
 sysmountPath: /host/sys
 rootfsmountPath: /rootfs
 libModulesPath: /lib/modules
 bootPath: /boot
 srcPath: /usr/src
 bpfPath: /sys/fs/bpf
 varPath: /var #for GKE only

hostNetwork: true
hostPID: true

imagePullSecrets:
  name: oc-docker-creds

labels: {}

annotations: {}

tolerations:

priorityClassName:

volumes:
 procpath: /proc
 devpath: /dev
 syspath: /sys
 rootfspath: /
 libmodulespath: /lib/modules
 bootpath: /boot
 srcpath: /usr/src
 bpfpath: /sys/fs/bpf
 varpath: /var #for GKE only

updateStrategy:
  type: RollingUpdate

amazonlinux:
  name: oc-node-exporter-amzn
  initContainer:
    name: install-linux-headers
    image: amazonlinux
    volumeMounts:
      name: src
      mountPath: /usr/src
  matchExpressions:
    key: opscruise.io/linux
    operator: In
    values: amazonlinux

ubuntu18_04:
  name: oc-node-exporter-ubuntu
  initContainer:
    name: install-linux-headers
    image: ubuntu:18.04
    volumeMounts:
      name: src
      mountPath: /usr/src
  matchExpressions:
    key: opscruise.io/linux
    operator: In
    values: ubuntu-18.04

centos8:
  name: oc-node-exporter-centos-8
  initContainer:
    name: install-linux-headers
    image: centos:8
    volumeMounts:
      name: src
      mountPath: /usr/src
  matchExpressions:
    key: opscruise.io/linux
    operator: In
    values: centos-8

centos7:
  name: oc-node-exporter-centos-7
  initContainer:
    name: install-linux-headers
    image: centos:7
    volumeMounts:
      name: src
      mountPath: /usr/src
  matchExpressions:
    key: opscruise.io/linux
    operator: In
    values: centos-7

gke:
  name: oc-node-exporter-gke
  matchExpressions:
    key: opscruise.io/linux
    operator: In
    values: chromium-cos

# Select if no label has set or matched
baseImage:
  name: oc-node-exporter
  matchExpressions:
    key: opscruise.io/linux
    operator: NotIn
    values:
      amazonlinux: amazonlinux
      ubuntu18_04: ubuntu-18.04
      ubuntu20_04: ubuntu-20.04
      centos8: centos-8
      centos7: centos-7
      chromiumcos: chromium-cos
