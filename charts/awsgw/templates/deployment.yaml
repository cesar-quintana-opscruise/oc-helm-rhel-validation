apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{ .Values.serviceAccountName }}
  namespace: {{ .Release.Namespace }}
  {{- if .Values.global.awsCredentials.roleArn }}
  annotations:
    eks.amazonaws.com/role-arn: {{ .Values.global.awsCredentials.roleArn }}
  {{- end }}
---
{{ $fullName := include "fullname" . -}}
{{- range $region := .Values.global.awsCredentials.regions }}
{{- with $ }} # with is to keep the global scope, so that can be access fields by . itself
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $fullName }}-{{ $region }}
  namespace: {{ $.Release.Namespace }}
  labels:
    chart: "{{ .Chart.Name }}-{{ .Chart.Version | replace "+" "_" }}"
    opscruise-chart-version: {{ .Values.global.opscruiseChartVersion }}
    app: awsgw
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: awsgw
  template:
    metadata:
      labels:
        app: awsgw
        opscruisePerimeter: opscruise
        opscruiseGroup: gateways
        opscruiseProduct: awsGW
        opscruiseStream: opscruise
        {{- if .Values.labels }}
        {{- range $label, $val := .Values.labels }}
        {{ $label }}: {{ $val }}
        {{- end }}
        {{- end }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
      {{- if .Values.annotations }}
        {{- range $annotation, $val := .Values.annotations }}
        {{ $annotation }}: {{ $val }}
        {{- end }}
      {{- end }}
    spec:
      serviceAccountName: {{ .Values.serviceAccountName }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.awsgw_tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: LOGLEVEL
              value: "{{ .Values.logLevel }}"
            - name: AWS_REGION
              value: {{ $region }}
          envFrom:
            - secretRef:
                name: {{ .Values.envFrom.secretRefname1 }}
            {{- if not .Values.global.awsCredentials.roleArn }}
            - secretRef:
                name: {{ .Values.envFrom.secretRefname2 }}
            {{- end }}
            
          volumeMounts:
          {{- toYaml .Values.volumeMounts | nindent 12 }}
          
          resources:
{{ toYaml .Values.resources | indent 12 }}

      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets.name }}

      volumes:
      {{- toYaml .Values.volumes | nindent 8 }}

      restartPolicy: {{ .Values.restartPolicy }}

      {{- if .Values.tolerations }}
      tolerations:
      {{- toYaml .Values.tolerations | nindent 6 }}
      {{- else if .Values.global.tolerations }}
      tolerations:
      {{- toYaml .Values.global.tolerations | nindent 6 }}
      {{- end }}

      {{- if .Values.affinity }}
      affinity:
      {{- toYaml .Values.affinity | nindent 8 }}
      {{- else if .Values.global.affinity }}
      affinity:
      {{- toYaml .Values.global.affinity | nindent 8 }}
      {{- end }}
      
      {{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
      {{- end }}
      
      {{- if .Values.global.hostAliases }}
      hostAliases:
        {{- toYaml .Values.global.hostAliases | nindent 6 }}
      {{- end }}
{{- end }}
{{- end }}