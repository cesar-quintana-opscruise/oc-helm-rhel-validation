kind: ConfigMap
apiVersion: v1
metadata:
  name: "{{ .Values.config.meta.name }}"
  namespace: {{ .Release.Namespace }}
data:
  OAUTH_WITH_SSL: "{{ .Values.config.oauthWithSsl }}"
  OAUTH_LOGIN_ENDPOINT: "{{ .Values.config.oauthLoginEndpoint }}"
  OAUTH_LOGIN_GRANT_TYPE: "{{ .Values.config.oauthLoginGrantType }}"
  OAUTH_LOGIN_SCOPE: "{{ .Values.config.oauthLoginScope }}"
  OAUTH_INTROSPECT_ENDPOINT: "{{ .Values.config.oauthIntrospectEndpoint }}"
  GOOGLE_APPLICATION_CREDENTIALS: "{{ .Values.config.googleApplicationCredentials }}"
  OAUTH_ACCEPT_UNSECURE_SERVER: "{{ .Values.config.oauthAcceptUnsecureServer }}"
  kafka.bootstrap.servers: "{{ .Values.global.gatewayCreds.environment.OPSCRUISE_ENDPOINT }}"
  kafka.sasl: "{{ .Values.config.kafka.sasl }}"
  kafka.sasl.jaas.config: "{{ .Values.config.kafka.saslJaasConfig }}"
  kafka.security.protocol: "{{ .Values.config.kafka.securityProtocol }}"
  kafka.sasl.mechanism: "{{ .Values.config.kafka.saslMechanism }}"
  kafka.sasl.login.callback.handler.class: "{{ .Values.config.kafka.saslLoginCallbackHandlerClass }}"
  kafka.ssl.verify: "{{ .Values.config.kafka.sslVerify }}"
  gcp.gateway.json: "{{ .Values.config.gcp.gcpGatewayJson }}"
  quarkus.http.port: "{{ .Values.config.quarkus.httpPort }}"
  quarkus.log.level: "{{ .Values.logLevel }}"
  gatewayName: "{{ .Values.config.gatewayName }}"
  gatewayKind: "{{ .Values.config.gatewayKind }}"